function! RunPythonScript(input) abort
    " Используем встроенные сокеты Vim вместо netcat
    let sock = socket_connect('127.0.0.1', 12345, {'timeout': 5000})
    if sock == -1
        return "Connection failed"
    endif
    
    " Отправляем запрос
    call ch_sendraw(sock, a:input . "\n")
    
    " Читаем полный ответ
    let response = ""
    while 1
        let chunk = ch_read(sock, {'timeout': 2000})
        if chunk ==# '' || chunk == v:null
            break
        endif
        let response .= chunk
    endwhile
    
    call ch_close(sock)
    return response
endfunction

function! StartPythonServer() abort
    " Запускаем Python-скрипт в фоновом режиме
    
    #let script_path = expand('~/hohotach/run.sh') " ← исправлено

    #let pid = system(script_path . ' >/dev/null 2>&1 & echo $!')
    #let pid = substitute(pid, '\n', '', '') " Убираем перевод строки
    #let g:python_server_pid = pid
endfunction

" Автозапуск сервера при старте Vim
autocmd VimEnter * call StartPythonServer()

function! OpenFloatingWindow()
    let buf = nvim_create_buf(v:false, v:true)
    
    " Настройки окна (шире и выше)
    let width = 70
    let height = 15
    let opts = {
        \ 'relative': 'editor',
        \ 'width': width,
        \ 'height': height,
        \ 'col': (&columns - width) / 2,
        \ 'row': (&lines - height) / 2,
        \ 'anchor': 'NW',
        \ 'style': 'minimal',
        \ 'border': 'single'
        \ }
    
    " Открываем плавающее окно
    let win = nvim_open_win(buf, v:true, opts)
    let w:float_win = win
    
    " Настройка клавиш
    call nvim_buf_set_keymap(buf, 'i', '<CR>', '<Esc>:call SubmitFloatingInput()<CR>', {'nowait': 1, 'noremap': 1})
    call nvim_buf_set_keymap(buf, 'n', '<CR>', ':call SubmitFloatingInput()<CR>', {'noremap': 1})
    call nvim_buf_set_keymap(buf, 'n', 'q', ':call CloseFloatingWindow()<CR>', {'noremap': 1})
    
    " Автоматически переходим в режим вставки в области ввода
    call cursor(3, 4)
    startinsert
endfunction

function! SubmitFloatingInput()
    let buf = bufnr('%')
    let input_line = getline(line('$'))
    let input = substitute(input_line, '^>>>\s*', '', '')

    if !empty(trim(input))
        let output = RunPythonScript(input)
        
        " Добавляем вывод в буфер
        call nvim_buf_set_lines(buf, -1, -1, v:true, split(output, '\n') + [">>> "])
        call cursor(line('$'), 4)
        startinsert
    else
        call nvim_buf_set_lines(buf, -1, -1, v:true, [">>> "])
        call cursor(line('$'), 4)
        startinsert
    endif
endfunction
function! CloseFloatingWindow()
    if exists('w:float_win') && nvim_win_is_valid(w:float_win)
        call nvim_win_close(w:float_win, v:true)
    endif
endfunction

augroup KillProcessOnExit
  autocmd!
  autocmd VimLeave * call system('kill -9 ' . g:python_server_pid)
augroup END

" Горячая клавиша
nnoremap <silent> <F5> :call OpenFloatingWindow()<CR>
