function! RunPythonScript(input) abort
    let response = system('echo "' . a:input . '" | nc localhost 12345')
    return response
endfunction

function! StartPythonServer() abort
    let script_path = expand('~/hohotach/run.sh')
    let pid = system(script_path . ' >/dev/null 2>&1 & echo $!')
    let pid = substitute(pid, '\n', '', '')
    let g:python_server_pid = pid
endfunction

autocmd VimEnter * call StartPythonServer()

function! OpenFloatingWindow()
    " Размеры и позиционирование окон
    let total_width = 100
    let output_height = 30   " Большая область вывода
    let input_height = 1     " Маленькая строка ввода
    let col = (&columns - total_width) / 2
    let output_row = (&lines - output_height - input_height - 1) / 2
    let input_row = output_row + output_height + 1  " +1 для рамки

    " Создаем окно вывода
    let output_buf = nvim_create_buf(v:false, v:true)
    let output_opts = {
        \ 'relative': 'editor',
        \ 'width': total_width,
        \ 'height': output_height,
        \ 'col': col,
        \ 'row': output_row,
        \ 'anchor': 'NW',
        \ 'style': 'minimal',
        \ 'border': 'single'
        \ }
    let g:float_output_win = nvim_open_win(output_buf, v:true, output_opts)
    call nvim_win_set_option(g:float_output_win, 'number', v:false)
    call nvim_win_set_option(g:float_output_win, 'wrap', v:true)

    " Создаем окно ввода
    let input_buf = nvim_create_buf(v:false, v:true)
    call nvim_buf_set_lines(input_buf, 0, -1, v:true, [""])
    let input_opts = {
        \ 'relative': 'editor',
        \ 'width': total_width,
        \ 'height': input_height,
        \ 'col': col,
        \ 'row': input_row,
        \ 'anchor': 'NW',
        \ 'style': 'minimal',
        \ 'border': 'single'
        \ }
    let g:float_input_win = nvim_open_win(input_buf, v:true, input_opts)
    let g:float_input_buf = input_buf

    " Настройка управления
    call nvim_set_current_win(g:float_input_win)
    call nvim_buf_set_keymap(input_buf, 'i', '<CR>', '<Esc>:call SubmitFloatingInput()<CR>', {'nowait': 1, 'noremap': 1})
    call nvim_buf_set_keymap(input_buf, 'n', '<CR>', ':call SubmitFloatingInput()<CR>', {'noremap': 1})
    call nvim_buf_set_keymap(input_buf, 'n', 'q', ':call CloseFloatingWindow()<CR>', {'noremap': 1})

    call nvim_buf_set_keymap(output_buf, 'n', '<Tab>', '<Cmd>call nvim_set_current_win(g:float_input_win)<CR>', {'noremap': 1, 'silent': 1})
    call nvim_buf_set_keymap(output_buf, 'n', '<S-Tab>', '<Cmd>call nvim_set_current_win(g:float_input_win)<CR>', {'noremap': 1, 'silent': 1})
    call nvim_buf_set_keymap(output_buf, 'n', 'q', '<Cmd>call CloseFloatingWindow()<CR>', {'noremap': 1})

    call nvim_buf_set_keymap(input_buf, 'n', '<Tab>', '<Cmd>call nvim_set_current_win(g:float_output_win)<CR>', {'noremap': 1, 'silent': 1})
    call nvim_buf_set_keymap(input_buf, 'n', '<S-Tab>', '<Cmd>call nvim_set_current_win(g:float_output_win)<CR>', {'noremap': 1, 'silent': 1})

    " Фокус на поле ввода
    call cursor(1, 5)
    startinsert
endfunction

function! SubmitFloatingInput()
    let input_line = getline(1)  " Получаем текущую строку ввода
    let input = substitute(input_line, '^>>>\s*', '', '')  " Убираем промт-префикс

    if !empty(trim(input))
        " Выполняем скрипт и получаем результат
        let output = RunPythonScript(input)
        let output_buf = winbufnr(g:float_output_win)
        
        call nvim_buf_set_lines(output_buf, 0, -1, v:true, split(output, '\n'))
    endif

    " Очищаем поле ввода
    call nvim_buf_set_lines(g:float_input_buf, 0, -1, v:true, [""])
    
    " Возвращаем фокус в поле ввода
    call nvim_set_current_win(g:float_input_win)
    call cursor(1, 5)
    startinsert
endfunction
function! CloseFloatingWindow()
    if exists('g:float_output_win') && nvim_win_is_valid(g:float_output_win)
        call nvim_win_close(g:float_output_win, v:true)
    endif
    if exists('g:float_input_win') && nvim_win_is_valid(g:float_input_win)
        call nvim_win_close(g:float_input_win, v:true)
    endif
endfunction

augroup KillProcessOnExit
    autocmd!
    autocmd VimLeave * if exists('g:python_server_pid') | call system('kill -9 ' . g:python_server_pid) | endif
augroup END

" Горячая клавиша для открытия
nnoremap <silent> <F5> :call OpenFloatingWindow()<CR>
nnoremap <silent> <F6> :call CloseFloatingWindow()<CR>
